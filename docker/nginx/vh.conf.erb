<%
if ENV['OS'] != 'Mac'
  ENV['APP_NAME'] = '$app_name'
  ENV['SERVER_NAME'] = '$host_server_name'
end
%>

upstream <%= ENV['APP_NAME'] %> {
  server unix:/volume/unicorn.<%= ENV['APP_NAME'] %>.sock;
  #  fail_timeout=0
}

server {
  listen 80;
  server_name <%= ENV['APP_NAME'] %>;

  index index.html;

  <% if docker %>
  root /var/www/app/public;
  <% else %>
  root <%= RAILS_ROOT %>/public;
  <% end %>

  # production環境ではassetsが動かなくなる？
  location ^~ /assets/ {
    <% if ENV['RAILS_ENV'] == 'production' %>
    root <%= RAILS_ROOT %>/public;
    # alias <%= RAILS_ROOT %>/public/assets/$1;
    <% elsif docker %>
    root /var/www/app;
    <% else %>
    proxy_pass http://<%= ENV['APP_NAME'] %>;
    <% end %>
  }

  location / {
    proxy_pass http://<%= ENV['APP_NAME'] %>;

    # クライアントのIPアドレス
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # 要求されたホスト名
    proxy_set_header Host $http_host;

    # プロキシ先のサーバーのLocationヘッダに従わせる
    proxy_redirect off;

    # レスポンスのExpiresヘッダを無視してproxy_cacheを有効にする
    proxy_ignore_headers Expires;

    # タイムアウト
    proxy_connect_timeout 10;
    proxy_send_timeout 10;

    # プロクシ先からのリードタイムアウト。unicornのタイムアウトより大きな値にする
    proxy_read_timeout 20;

    # サーバーの40X 50Xエラーを検知して静的ファイルにリダイレクトする。
    proxy_intercept_errors on;

    # バッファサイズの設定
    # もうすこし大きい方がいい？？
    proxy_buffering  on;
    proxy_buffer_size  8k;
    proxy_buffers  100 8k;
  }

  # 静的ファイルをキャッシュする
  location ~ .*\.(html?|jpe?g|gif|png|css|js|ico|swf|inc) {
    <% if ENV['RAILS_ENV'] == 'production' || docker %>
    proxy_cache  <%= ENV['APP_NAME'] %>;
    proxy_cache_valid any 1h;
    <% end %>

    # ブラウザにもキャッシュしてもらう
    expires 1w;
    access_log off;
  }

  # ログ関連設定
  access_log  /volume/<%= ENV['APP_NAME'] %>.access.log  main;
  error_log  /volume/<%= ENV['APP_NAME'] %>.error.log  error;

  <% if ENV['RAILS_ENV'] == 'production' || docker %>
  # 403の場合404であるように見せる
  error_page  404  /404.html;
  error_page  403 =404  /404.html;
  error_page  500 502 503 504  /50x.html;
  <% end %>

  # faviconがないのでログは抑制する
  location /favicon {
    empty_gif;
    access_log    off;
    log_not_found off;
  }
}
